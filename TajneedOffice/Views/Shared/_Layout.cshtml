<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - مكتب التجنيد</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <!-- Select2 CSS (متاح لكل الصفحات) -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
</head>
<body dir="rtl">

    <!-- Global Notification Container -->
    <div id="globalNotificationContainer" class="position-fixed top-0 start-50 translate-middle-x" style="z-index: 9999; margin-top: 20px; display: none;">
        <div id="globalNotification" class="alert alert-dismissible fade show" role="alert" style="min-width: 300px; max-width: 600px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
            <div class="d-flex align-items-center">
                <i id="notificationIcon" class="me-2"></i>
                <span id="notificationMessage"></span>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" onclick="hideGlobalNotification()"></button>
        </div>
    </div>

    <div class="d-flex" dir="rtl">
        @await Html.PartialAsync("_Sidebar")

        <main id="mainContent" class="content-area flex-grow-1">
            <div class="container-fluid p-4">
                @RenderBody()
            </div>
        </main>
    </div>

    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/sidebar-toggle.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    
    <!-- Global Notification Script -->
    <script>
        // Global notification system
        let notificationTimeout;
        
        function showGlobalNotification(message, type = 'success', duration = 5000) {
            const container = document.getElementById('globalNotificationContainer');
            const notification = document.getElementById('globalNotification');
            const icon = document.getElementById('notificationIcon');
            const messageSpan = document.getElementById('notificationMessage');
            
            // Clear any existing timeout
            if (notificationTimeout) {
                clearTimeout(notificationTimeout);
            }
            
            // Set notification content
            messageSpan.textContent = message;
            
            // Set notification type and styling
            notification.className = `alert alert-${type} alert-dismissible fade show`;
            
            // Set appropriate icon
            switch (type) {
                case 'success':
                    icon.className = 'fas fa-check-circle me-2';
                    break;
                case 'danger':
                case 'error':
                    icon.className = 'fas fa-exclamation-circle me-2';
                    break;
                case 'warning':
                    icon.className = 'fas fa-exclamation-triangle me-2';
                    break;
                case 'info':
                    icon.className = 'fas fa-info-circle me-2';
                    break;
                default:
                    icon.className = 'fas fa-info-circle me-2';
            }
            
            // Show notification
            container.style.display = 'block';
            
            // Auto-hide after duration
            if (duration > 0) {
                notificationTimeout = setTimeout(() => {
                    hideGlobalNotification();
                }, duration);
            }
        }
        
        function hideGlobalNotification() {
            const container = document.getElementById('globalNotificationContainer');
            container.style.display = 'none';
            
            if (notificationTimeout) {
                clearTimeout(notificationTimeout);
                notificationTimeout = null;
            }
        }
        
        // Process TempData messages on page load
        document.addEventListener('DOMContentLoaded', function() {
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                showGlobalNotification('@Html.Raw(TempData["SuccessMessage"])', 'success');
                </text>
            }
            
            @if (TempData["ErrorMessage"] != null)
            {
                <text>
                showGlobalNotification('@Html.Raw(TempData["ErrorMessage"])', 'danger');
                </text>
            }
            
            @if (TempData["WarningMessage"] != null)
            {
                <text>
                showGlobalNotification('@Html.Raw(TempData["WarningMessage"])', 'warning');
                </text>
            }
            
            @if (TempData["InfoMessage"] != null)
            {
                <text>
                showGlobalNotification('@Html.Raw(TempData["InfoMessage"])', 'info');
                </text>
            }
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
